#!/bin/bash

scriptdir=$(dirname $BASH_SOURCE)
settings_script=$1
source $scriptdir/lib/_define_functions.bash
source $scriptdir/lib/_load_settings.bash


hostonly_netname=

cat <<EOF

Checking for an existing VirtualBox host-only network/interface
with an ip address of $hostonly_host_ip...

EOF

determine_existing_hostonly_net_info

if [[ -n $found_net_name ]]; then
    cat <<EOF
Found an existing VirtualBox host-only network/interface with
host address of $hostonly_host_ip.  Checking properties...

EOF

    if [[ $found_net_mask != $hostonly_netmask ]]; then
        cat <<EOF
The network mask of the hostonly adapter/network with IP address
of $hostonly_host_ip is not $hostonly_netmask as we are expecting
it to be.

EOF
        exit 1
    fi

    if [[ $found_net_dhcp != Disabled ]]; then
        cat <<EOF
The DHCP on the hostonly adapter/network with IP address of
$hostonly_host_ip is not Disabled as we are expecting it to be.
EOF
        exit 1
    fi

    cat <<EOF
Properties match what we want, so using the existing $found_net_name
network/interface with IP address of $hostonly_host_ip.

EOF
    hostonly_netname=$found_net_name

fi

if [[ -z $hostonly_netname ]]; then
    cat <<EOF
Creating the new VirtualBox host-only network...

EOF
    if ! hostonly_netname=$( VBoxManage hostonlyif create | grep -E -o 'vboxnet[0-9]+' ); then
        echo "Failed to create a new VirtualBox hostonly adapter/network." >&2
        exit 1
    fi

    cat <<EOF
Configuring IPv4 settings of the new $hostonly_netname host-only
adapter/network...

EOF
    VBoxManage hostonlyif ipconfig $hostonly_netname \
        --ip $hostonly_host_ip \
        --netmask $hostonly_netmask
fi
